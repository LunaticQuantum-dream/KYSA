Name:KYSA-202304-0049
Severity:重要
Summary:golang-1.18安全漏洞
Published:2025-01-15
URL:/support/loophole/patch/7167.html
Title:
			公告ID：KYSA-202304-0049
公告摘要：golang-1.18安全漏洞
等级：重要
发布日期：2025-01-15
		
1. 漏洞概述
CVE-2022-1962
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Google Golang 1.18.4-r0之前版本存在安全漏洞，该漏洞源于攻击者可以通过go/parser Parse导致Go的致命错误，以触发拒绝服务。
CVE-2023-24538
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Google Golang 存在安全漏洞，该漏洞源于Templates没有正确地将反引号` 视为 Javascript 字符串分隔符，并且没有按预期转义它们。
CVE-2022-30633
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Go 1.17.12和Go 1.18.4之前的encoding/xml中的Unmarshall中的不受控制的递归允许攻击者通过将xml文档解组为Go结构来引起堆栈耗尽引起的恐慌，该Go结构具有使用“any”字段标记的嵌套字段。
CVE-2022-29526
Google Go是一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。Google go 存在权限许可和访问控制问题漏洞，该漏洞源于系统调用中的faccessat存在检查错误。
CVE-2022-30635
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。解码器中的不受控递归。Go 1.17.12和Go 1.18.4之前的encoding/gob解码允许攻击者通过包含深度嵌套结构的消息，通过堆栈耗尽而引起恐慌。
CVE-2022-1705
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Google Golang 1.18.4-r0之前版本存在安全漏洞，该漏洞源于攻击者可以通过Net/http Transfer-Encoding Header在Go上添加新的报头信息以改变服务行为。
CVE-2022-30632
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。
CVE-2022-2879
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于archive/tar读取头文件时内存消耗不受限制。
CVE-2022-32148
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。
CVE-2022-2880
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于net/http/httputil：ReverseProxy不应该转发不可解析的查询参数。
CVE-2023-24537
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于在包含行号非常大的//line 指令的 Go 源代码上调用任何 Parse 函数都可能由于整数溢出而导致无限循环。
CVE-2022-28131
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，Go 1.17.12和Go 1.18.4之前版本跳过encoding/xml允许攻击者通过深度嵌套的xml文档由于堆栈耗尽而引起恐慌。
CVE-2022-30631
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，Go 1.17.12和Go 1.18.4之前的Read-in compress/gzip允许攻击者通过包含大量级联的0长度压缩文件的存档，由于堆栈耗尽而引起恐慌。
CVE-2022-27664
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 1.18.6之前版本和1.19.1之前的1.19.x版本存在安全漏洞，该漏洞源于如果关闭被致命错误抢占，HTTP/2 连接可能会在关闭期间挂起，攻击者可能会导致拒绝服务。
CVE-2022-41717
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞。攻击者利用该漏洞导致内存过度增长。
CVE-2022-30629
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于会话票证缺少随机ticket_age_add。
CVE-2022-30630
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，Go 1.17.12和Go 1.18.4之前的io/fs中的Glob中的不受控制的递归允许攻击者通过包含大量路径分隔符的路径，由于堆栈耗尽而引起恐慌。
CVE-2022-32189
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于过短的编码消息可能会导致 big.Float 和 big.Rat 中的 math/big 出现恐慌，从而导致拒绝服务。
CVE-2022-41715
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。在1.8版本中开放插件（Plugin）的支持，这意味着现在能从Go中动态加载部分函数。Google Golang 存在安全漏洞，该漏洞源于regexp/syntax限制解析正则表达式时使用的内存。
CVE-2023-24534
Google Golang是一种静态强类型、编译型语言。Go的语法接近C语言，但对于变量的声明有所不同。Go支持垃圾回收功能。Google Golang 存在安全漏洞，该漏洞源于HTTP 和 MIME 标头解析时会分配大量内存，即使在解析小的输入时也是如此，这可能会导致拒绝服务。

2. 受影响的操作系统及软件包
·银河麒麟桌面操作系统V10 SP1 2403、银河麒麟桌面操作系统V10 SP1 2303、银河麒麟桌面操作系统V10 SP1 2303 Update2
x86_64 架构：
golang-1.18-go、golang-1.18-src、golang-1.18
arm64 架构：
golang-1.18-go、golang-1.18-src、golang-1.18
mips64el 架构：
golang-1.18-go、golang-1.18-src、golang-1.18
loongarch64 架构：
golang-1.18-src、golang-1.18

3. 软件包修复版本
·银河麒麟桌面操作系统V10 SP1 2403、银河麒麟桌面操作系统V10 SP1 2303、银河麒麟桌面操作系统V10 SP1 2303 Update2
1.18.1-1kylin1~20.04.2

4. 修复方法
方法一：升级安装
执行更新命令进行升级
$sudo apt update
$sudo apt install golang-1.18
方法二：下载软件包进行升级安装
通过软件包地址下载软件包，使用软件包升级命令根据受影响的软件包列表升级相关的组件包。
$sudo apt-get install /Path1/Package1 /Path2/Package2 /Path3/Package3……
注：Path 指软件包下载到本地的路径，Package指下载的软件包名称，多个软件包则以空格分开。

5. 软件包下载地址
银河麒麟桌面操作系统V10 SP1 2403、银河麒麟桌面操作系统V10 SP1 2303、银河麒麟桌面操作系统V10 SP1 2303 Update2
x86_64软件包下载地址
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-go_1.18.1-1kylin1~20.04.2_amd64.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-src_1.18.1-1kylin1~20.04.2_all.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18_1.18.1-1kylin1~20.04.2_all.deb
arm64软件包下载地址
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-go_1.18.1-1kylin1~20.04.2_arm64.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-src_1.18.1-1kylin1~20.04.2_all.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18_1.18.1-1kylin1~20.04.2_all.deb
mips64el软件包下载地址
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-go_1.18.1-1kylin1~20.04.2_mips64el.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-src_1.18.1-1kylin1~20.04.2_all.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18_1.18.1-1kylin1~20.04.2_all.deb
loongarch64软件包下载地址
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18-src_1.18.1-1kylin1~20.04.2_all.deb
https://archive.kylinos.cn/kylin/KYLIN-ALL/pool/universe/g/golang-1.18/golang-1.18_1.18.1-1kylin1~20.04.2_all.deb

6. 修复验证
使用软件包查询命令，查看相关的软件包版本大于或等于修复版本则成功修复。
$sudo dpkg -l |grep Package
注：Package为软件包包名。
